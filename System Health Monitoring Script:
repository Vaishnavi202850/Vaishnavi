import psutil
import logging
from datetime import datetime

# Set up logging
logging.basicConfig(filename='/var/log/system_health.log', level=logging.INFO, format='%(asctime)s %(message)s')

# Define thresholds
CPU_THRESHOLD = 80  # in percentage
MEMORY_THRESHOLD = 80  # in percentage
DISK_THRESHOLD = 80  # in percentage
PROCESS_THRESHOLD = 200  # number of processes

def log_alert(message):
    """Logs an alert message."""
    logging.info(message)
    print(message)

def check_cpu_usage():
    """Check CPU usage and log an alert if it exceeds the threshold."""
    cpu_usage = psutil.cpu_percent(interval=1)
    if cpu_usage > CPU_THRESHOLD:
        log_alert(f'ALERT: High CPU usage detected: {cpu_usage}%')

def check_memory_usage():
    """Check memory usage and log an alert if it exceeds the threshold."""
    memory_info = psutil.virtual_memory()
    memory_usage = memory_info.percent
    if memory_usage > MEMORY_THRESHOLD:
        log_alert(f'ALERT: High memory usage detected: {memory_usage}%')

def check_disk_usage():
    """Check disk usage and log an alert if it exceeds the threshold."""
    disk_info = psutil.disk_usage('/')
    disk_usage = disk_info.percent
    if disk_usage > DISK_THRESHOLD:
        log_alert(f'ALERT: High disk usage detected: {disk_usage}%')

def check_running_processes():
    """Check the number of running processes and log an alert if it exceeds the threshold."""
    process_count = len(psutil.pids())
    if process_count > PROCESS_THRESHOLD:
        log_alert(f'ALERT: High number of running processes detected: {process_count}')

def main():
    """Main function to check system health."""
    check_cpu_usage()
    check_memory_usage()
    check_disk_usage()
    check_running_processes()

if __name__ == "__main__":
    main()


